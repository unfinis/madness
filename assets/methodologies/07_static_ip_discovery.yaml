id: static_ip_discovery
name: Static IP Discovery and Configuration
category: Physical Network Access
priority: high
description: Identify and configure static IP addresses when DHCP is unavailable or restricted.
detailed_description: |
  When DHCP is disabled or restricted, discover the network configuration through passive monitoring
  and active scanning, then configure a static IP address to gain network access.

required_conditions:
  - physical_access
  - dhcp_failed

optional_conditions:
  - network_documentation
  - visible_labels

tools:
  - name: arp-scan
    description: ARP scanner for network discovery
    platform: linux
  - name: tcpdump
    description: Packet capture tool
    platform: linux
  - name: nmap
    description: Network discovery and scanning
    platform: all

phases:
  - name: passive_discovery
    steps:
      - id: capture_arp
        action: Capture ARP traffic passively
        command: sudo tcpdump -i {interface_name} -n arp -c 100
        alternatives:
          - shell: tshark
            command: sudo tshark -i {interface_name} -f "arp" -c 100
        output_variables:
          - observed_ips
          - observed_macs

      - id: analyze_patterns
        action: Identify IP patterns from captured traffic
        command: sudo tcpdump -i {interface_name} -n -c 500 | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | sort -u
        expected_output: |
          List of IP addresses in use
          Common subnet patterns

  - name: active_discovery
    steps:
      - id: arp_scan
        action: Perform ARP scan if safe
        command: sudo arp-scan -l -I {interface_name}
        caution: May trigger IDS alerts
        alternatives:
          - shell: nmap
            command: sudo nmap -sn -PR {suspected_range}

      - id: identify_gateway
        action: Identify likely gateway
        command: |
          # Usually .1 or .254 in the subnet
          echo "Likely gateways: {subnet}.1, {subnet}.254"

  - name: configuration
    steps:
      - id: configure_ip
        action: Configure static IP address
        command: |
          sudo ip addr add {target_ip}/{subnet_mask} dev {interface_name}
          sudo ip route add default via {gateway_ip}
        alternatives:
          - shell: windows_cmd
            command: |
              netsh interface ip set address "{adapter_name}" static {target_ip} {subnet_mask} {gateway_ip}
          - shell: macos
            command: |
              sudo ifconfig {interface_name} inet {target_ip} netmask {subnet_mask}
              sudo route add default {gateway_ip}

      - id: configure_dns
        action: Configure DNS servers
        command: echo "nameserver {dns_server_ip}" | sudo tee /etc/resolv.conf
        alternatives:
          - shell: windows_cmd
            command: netsh interface ip set dns "{adapter_name}" static {dns_server_ip}

      - id: verify_connectivity
        action: Test network connectivity
        command: |
          ping -c 3 {gateway_ip}
          nslookup google.com {dns_server_ip}

triggers:
  on_complete:
    - methodology: network_discovery
      condition: static_ip_configured
    - methodology: port_scanning
      condition: network_access_gained

findings:
  - id: no_dhcp_snooping
    title: Lack of DHCP Snooping
    severity: medium
    description: Network allows static IP configuration without validation

  - id: no_ip_conflict_detection
    title: No IP Conflict Detection
    severity: low
    description: Duplicate IP addresses not prevented or detected

  - id: network_docs_exposed
    title: Network Documentation Exposed
    severity: low
    description: Physical labels or documentation reveal network configuration

issues:
  - symptom: IP address conflict detected
    severity: high
    causes:
      - Selected IP already in use
      - Dynamic ARP inspection enabled
    resolutions:
      - Choose different IP address
      - Wait for ARP cache timeout
      - Use IP from unused range

  - symptom: No connectivity after configuration
    severity: medium
    causes:
      - Incorrect subnet mask
      - Wrong VLAN
      - Gateway unreachable
    resolutions:
      - Verify subnet mask from captured traffic
      - Check for VLAN tagging
      - Confirm gateway IP

  - symptom: Static ARP entries blocking
    severity: medium
    causes:
      - Switch has static ARP bindings
      - Port security with IP-MAC binding
    resolutions:
      - Try MAC spoofing with correct IP
      - Look for different switch port

cleanup:
  - priority: high
    action: Remove static IP configuration
    command: sudo ip addr del {target_ip}/{subnet_mask} dev {interface_name}

  - priority: medium
    action: Clear routing table
    command: sudo ip route del default via {gateway_ip}

  - priority: low
    action: Restore DHCP configuration
    command: sudo dhclient {interface_name}

outcome_analysis:
  success_indicators:
    - Static IP configured
    - Gateway responding
    - DNS resolution working
    - No IP conflicts

  failure_indicators:
    - IP conflicts detected
    - No route to gateway
    - Port security blocking