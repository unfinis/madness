id: 8021x_bypass_hub
name: 802.1X Bypass via Hub/Tap
category: NAC Bypass
priority: critical
description: Insert a hub or network tap between an authenticated device and switch port to piggyback on existing authentication.
detailed_description: |
  Bypass 802.1X authentication by inserting a network hub or tap between an already authenticated device
  and the switch port. This allows piggybacking on the existing authentication session.

required_conditions:
  - physical_access
  - 8021x_enabled
  - authenticated_device_present

optional_conditions:
  - no_macsec
  - multiple_macs_allowed

tools:
  - name: network_hub
    description: Ethernet hub or network tap
    platform: hardware
  - name: tcpdump
    description: Packet capture tool
    platform: linux
  - name: vconfig
    description: VLAN configuration tool
    platform: linux

phases:
  - name: preparation
    steps:
      - id: identify_target_connection
        action: Identify authenticated device connection
        command: |
          # Locate authenticated device's network cable
          # Physical inspection required

      - id: prepare_tap
        action: Prepare network tap/hub
        command: |
          # Physical setup:
          # Wall Port -> Hub/Tap -> Legitimate Device
          #              |
          #              -> Attack Machine

  - name: insertion
    steps:
      - id: physical_insertion
        action: Insert hub between device and wall port
        command: |
          # 1. Disconnect legitimate device cable
          # 2. Connect cable to hub input
          # 3. Connect legitimate device to hub port 1
          # 4. Connect attack machine to hub port 2

      - id: enable_promiscuous
        action: Enable promiscuous mode
        command: sudo ip link set {interface_name} promisc on

      - id: monitor_traffic
        action: Monitor network traffic
        command: sudo tcpdump -i {interface_name} -w capture.pcap
        alternatives:
          - shell: tshark
            command: sudo tshark -i {interface_name} -w capture.pcap

  - name: exploitation
    steps:
      - id: analyze_network
        action: Analyze network configuration
        command: |
          # Extract network information from capture
          tcpdump -r capture.pcap -nn | head -100

      - id: check_vlan_tagging
        action: Check for VLAN tagging
        command: |
          tcpdump -r capture.pcap -nn vlan | head -20
        output_variables:
          - vlan_id
          - tagged_traffic

      - id: configure_vlan
        action: Configure VLAN if needed
        command: |
          sudo modprobe 8021q
          sudo vconfig add {interface_name} {vlan_id}
          sudo ifconfig {interface_name}.{vlan_id} up
        conditional: vlan_tagged

      - id: obtain_ip
        action: Obtain IP address
        command: |
          # Use different IP in same subnet
          sudo ip addr add {attack_ip}/{subnet_mask} dev {interface_name}
        alternatives:
          - shell: dhcp
            command: sudo dhclient {interface_name}.{vlan_id}

triggers:
  on_complete:
    - methodology: network_discovery
      condition: network_access_gained
    - methodology: lateral_movement
      condition: internal_access_achieved

findings:
  - id: multiple_macs_allowed
    title: Single MAC per Port Not Enforced
    severity: high
    description: Switch port allows multiple MAC addresses despite 802.1X

  - id: no_macsec
    title: No MACsec Implementation
    severity: medium
    description: 802.1X traffic not encrypted, allowing bypass

  - id: physical_security_weak
    title: Physical Port Access Not Secured
    severity: medium
    description: Physical access to network connections not restricted

issues:
  - symptom: Port shutdown on multiple MACs
    severity: critical
    causes:
      - Port security enabled
      - Single MAC enforcement
      - Port violation configured
    resolutions:
      - Remove hub immediately
      - Wait for port recovery
      - Try wireless attack vectors

  - symptom: Network performance degradation
    severity: medium
    causes:
      - Hub causes collision domain
      - Bandwidth shared among ports
      - Duplex mismatch
    resolutions:
      - Use network tap instead
      - Limit traffic generation
      - Quick exploitation and removal

  - symptom: MACsec preventing communication
    severity: high
    causes:
      - Traffic encrypted at Layer 2
      - Cannot decrypt without keys
    resolutions:
      - This bypass won't work
      - Try other attack vectors
      - Focus on wireless methods

cleanup:
  - priority: critical
    action: Remove hub from network
    command: |
      # Physical removal required:
      # 1. Disconnect attack machine
      # 2. Remove hub
      # 3. Reconnect legitimate device directly

  - priority: high
    action: Remove VLAN interfaces
    command: sudo vconfig rem {interface_name}.{vlan_id}

  - priority: medium
    action: Disable promiscuous mode
    command: sudo ip link set {interface_name} promisc off

outcome_analysis:
  success_indicators:
    - Multiple devices on single port
    - Network traffic visible
    - Can communicate on network
    - No port shutdown

  failure_indicators:
    - Port shutdown immediately
    - MACsec encryption present
    - No traffic visible
    - Physical security prevents insertion